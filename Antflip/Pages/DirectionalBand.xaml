<!-- Copyright 2021 lh317

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<ui:Page x:Class="Antflip.Pages.DirectionalBand"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Antflip.Controls"
        xmlns:page="clr-namespace:Antflip.Pages"
        xmlns:ant="clr-namespace:Antflip"
        mc:Ignorable="d"
        d:DesignHeight="450" d:DesignWidth="800"
        Title="DirectionalBand">
  <ui:Page.Resources>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
  </ui:Page.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="1*" />
      <ColumnDefinition Width="1*" />
      <ColumnDefinition Width="1*" />
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="1*" />
      <RowDefinition Height="1*" />
      <RowDefinition Height="1*" />
      <RowDefinition Height="1*" />
    </Grid.RowDefinitions>
    <RadioButton Content="NW" IsChecked="{Binding NorthWest.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding NorthWest}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding NorthWest}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Column="1" Content="N" IsChecked="{Binding North.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding North}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding North}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Column="2" Content="NE" IsChecked="{Binding NorthEast.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding NorthEast}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding NorthEast}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="1" Content="W" IsChecked="{Binding West.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding West}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding West}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="1" Grid.Column="1" Content="OMNI" IsChecked="{Binding Omni.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding Omni}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding Omni}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="1" Grid.Column="2" Content="E" IsChecked="{Binding East.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding East}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding East}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="2" Content="SW" IsChecked="{Binding SouthWest.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding SouthWest}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding SouthWest}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="2" Grid.Column="1" Content="S" IsChecked="{Binding South.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding South}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding South}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
    <RadioButton Grid.Row="2" Grid.Column="2" Content="SE" IsChecked="{Binding SouthEast.Default, Mode=OneTime}">
      <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Checked">
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding SouthEast}" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Loaded">
          <Behaviors:Interaction.Behaviors>
            <Behaviors:ConditionBehavior>
              <Behaviors:ConditionalExpression>
                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
              </Behaviors:ConditionalExpression>
            </Behaviors:ConditionBehavior>
          </Behaviors:Interaction.Behaviors>
          <Behaviors:InvokeCommandAction Command="{Binding BandActuateCommand}" CommandParameter="{Binding SouthEast}" />
        </Behaviors:EventTrigger>
      </Behaviors:Interaction.Triggers>
    </RadioButton>
        <ToggleButton Grid.Row="3" Grid.Column="0" Content="UNUN" IsChecked="{Binding UNUNChecked}" IsEnabled="{Binding UNUNEnabled}">
            <Behaviors:Interaction.Triggers>
                <Behaviors:EventTrigger EventName="Checked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding EnableUNUN}" />
                </Behaviors:EventTrigger>
                <Behaviors:EventTrigger EventName="Unchecked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding DisableUNUN}" />
                </Behaviors:EventTrigger>
                <Behaviors:EventTrigger EventName="Loaded">
                    <Behaviors:Interaction.Behaviors>
                        <Behaviors:ConditionBehavior>
                            <Behaviors:ConditionalExpression>
                                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" Operator="Equal" RightOperand="True" />
                            </Behaviors:ConditionalExpression>
                        </Behaviors:ConditionBehavior>
                    </Behaviors:Interaction.Behaviors>
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding EnableUNUN}" />
                </Behaviors:EventTrigger>
            </Behaviors:Interaction.Triggers>
        </ToggleButton>
        <ToggleButton Grid.Row="3" Grid.Column="2" Content="Swap AMP" IsChecked="{Binding EnableAmpSwap.Default, Mode=OneTime}">
            <Behaviors:Interaction.Triggers>
                <Behaviors:EventTrigger EventName="Checked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding EnableAmpSwap}" />
                </Behaviors:EventTrigger>
                <Behaviors:EventTrigger EventName="Unchecked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding DisableAmpSwap}" />
                </Behaviors:EventTrigger>
                <Behaviors:EventTrigger EventName="Loaded">
                    <Behaviors:Interaction.Behaviors>
                        <Behaviors:ConditionBehavior>
                            <Behaviors:ConditionalExpression>
                                <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" Operator="Equal" RightOperand="True" />
                            </Behaviors:ConditionalExpression>
                        </Behaviors:ConditionBehavior>
                    </Behaviors:Interaction.Behaviors>
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding EnableAmpSwap}" />
                </Behaviors:EventTrigger>
            </Behaviors:Interaction.Triggers>
        </ToggleButton>
        <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Loaded">
                <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding Load}" />
            </Behaviors:EventTrigger>
        </Behaviors:Interaction.Triggers>
    </Grid>
</ui:Page>
