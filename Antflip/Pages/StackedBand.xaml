<!-- Copyright 2021-2024 lh317

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<ui:Page x:Class="Antflip.Pages.StackedBand"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:Antflip.Pages"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="StackedBand">
    <ui:Page.Resources>
        <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
    </ui:Page.Resources>
        <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:CallMethodAction TargetObject="{Binding}" MethodName="DoLoaded" />
        </Behaviors:EventTrigger>
        <Behaviors:EventTrigger EventName="Unloaded">
            <Behaviors:CallMethodAction TargetObject="{Binding}" MethodName="DoUnloaded" />
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <RadioButton GroupName="Stack" Content="_Upper" IsChecked="{Binding UpperChecked}">
          <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Checked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding UpperStack}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Loaded">
              <Behaviors:Interaction.Behaviors>
                <Behaviors:ConditionBehavior>
                  <Behaviors:ConditionalExpression>
                    <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
                  </Behaviors:ConditionalExpression>
                </Behaviors:ConditionBehavior>
              </Behaviors:Interaction.Behaviors>
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding UpperStack}" />
            </Behaviors:EventTrigger>
          </Behaviors:Interaction.Triggers>
        </RadioButton>
        <RadioButton GroupName="Stack" Grid.Row="1" Content="_Both" IsChecked="{Binding BothChecked}">
        <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Checked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding BothStack}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Loaded">
              <Behaviors:Interaction.Behaviors>
                <Behaviors:ConditionBehavior>
                  <Behaviors:ConditionalExpression>
                    <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
                  </Behaviors:ConditionalExpression>
                </Behaviors:ConditionBehavior>
              </Behaviors:Interaction.Behaviors>
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding BothStack}" />
            </Behaviors:EventTrigger>
          </Behaviors:Interaction.Triggers>
        </RadioButton>
        <RadioButton GroupName="Stack" Grid.Row="2" Content="_Lower" IsChecked="{Binding LowerChecked}">
        <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Checked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding LowerStack}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Loaded">
              <Behaviors:Interaction.Behaviors>
                <Behaviors:ConditionBehavior>
                  <Behaviors:ConditionalExpression>
                    <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type RadioButton}}}" Operator="Equal" RightOperand="True" />
                  </Behaviors:ConditionalExpression>
                </Behaviors:ConditionBehavior>
              </Behaviors:Interaction.Behaviors>
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding LowerStack}" />
            </Behaviors:EventTrigger>
          </Behaviors:Interaction.Triggers>
        </RadioButton>
        <ToggleButton Grid.Row="3" Grid.Column="2" Content="Swap AMP" IsChecked="{Binding PSWAPChecked}">
            <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Checked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding PSWAP.Enable}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Unchecked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding PSWAP.Disable}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Loaded">
              <Behaviors:Interaction.Behaviors>
                <Behaviors:ConditionBehavior>
                  <Behaviors:ConditionalExpression>
                    <Behaviors:ComparisonCondition LeftOperand="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" Operator="Equal" RightOperand="True" />
                  </Behaviors:ConditionalExpression>
                </Behaviors:ConditionBehavior>
              </Behaviors:Interaction.Behaviors>
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding PSWAP.Enable}" />
            </Behaviors:EventTrigger>
            </Behaviors:Interaction.Triggers>
        </ToggleButton>
        <Behaviors:Interaction.Triggers>
          <Behaviors:EventTrigger EventName="Loaded">
            <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}" CommandParameter="{Binding Load}" />
          </Behaviors:EventTrigger>
        </Behaviors:Interaction.Triggers>
    </Grid>
</ui:Page>
