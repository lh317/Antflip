<!-- Copyright 2021 lh317

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. 
-->
<Window x:Class="Antflip.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:Antflip"
        xmlns:controls="clr-namespace:Antflip.Controls"
        mc:Ignorable="d"
        ui:WindowHelper.UseModernWindowStyle="True"
        Title="Antenna Flip"
        Height="460"
        Width="920">
  <Window.DataContext>
    <local:MainWindowContext/>
  </Window.DataContext>
  <ui:NavigationView x:Name="NavigationView"
                     PaneTitle="Bands"
                     PaneDisplayMode="Top"
                     MenuItemsSource="{Binding MenuItems}">
    <ui:NavigationView.MenuItemTemplate>
      <DataTemplate DataType="local:MenuItem">
        <ui:NavigationViewItem Content="{Binding Content}" />
      </DataTemplate>
    </ui:NavigationView.MenuItemTemplate>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>
      <ui:Frame x:Name="ContentFrame" VerticalAlignment="Stretch">
        <Behaviors:Interaction.Triggers>
          <Behaviors:EventTrigger EventName="SelectionChanged"
                                  SourceObject="{Binding ElementName=NavigationView}">
            <local:NavigationAction ItemConverter="{Binding MenuItemToPage}"
                                    SettingsPageType="{Binding SettingsPage, Mode=OneTime}" />
          </Behaviors:EventTrigger>
          <Behaviors:EventTrigger EventName="Navigated" SourceObject="{Binding ElementName=ContentFrame}">
            <Behaviors:CallMethodAction TargetObject="{Binding}" MethodName="OnNavigated" />
          </Behaviors:EventTrigger>
        </Behaviors:Interaction.Triggers>
      </ui:Frame>
      <ui:CommandBar Grid.Row="1">
        <ui:CommandBar.Content>
            <ui:ItemsRepeater ItemsSource="{Binding Relays}">
                <DataTemplate DataType="local:Relay">
                    <controls:LEDLabel Margin="6,6,0,0" Content="{Binding Label}" IsChecked="{Binding IsOn}" IsConnected="{Binding IsConnected}"/>
                </DataTemplate>
                 <ui:ItemsRepeater.Layout>
                    <ui:StackLayout Orientation="Horizontal" />
                </ui:ItemsRepeater.Layout>
            </ui:ItemsRepeater>
        </ui:CommandBar.Content>
        <ui:AppBarToggleButton Label="UNUN" IsChecked="{Binding UNUNChecked}" Visibility="{Binding UNUNVisible}">
          <Behaviors:Interaction.Triggers>
            <Behaviors:EventTrigger EventName="Checked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}"
                                             CommandParameter="{Binding RelayData.UNUN.Enable}" />
            </Behaviors:EventTrigger>
            <Behaviors:EventTrigger EventName="Unchecked">
              <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}"
                                             CommandParameter="{Binding Path=RelayData.UNUN.Disable}" />
            </Behaviors:EventTrigger>
          </Behaviors:Interaction.Triggers>
        </ui:AppBarToggleButton>
        <ui:AppBarToggleButton Label="PSWAP" IsChecked="{Binding PSWAPChecked}" Visibility="{Binding PSWAPVisible}">
            <Behaviors:Interaction.Triggers>
                <Behaviors:EventTrigger EventName="Checked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}"
                                        CommandParameter="{Binding RelayData.AmpSwap.Enable}" />
                </Behaviors:EventTrigger>
                <Behaviors:EventTrigger EventName="Unchecked">
                    <Behaviors:InvokeCommandAction Command="{Binding ActuateCommand}"
                                        CommandParameter="{Binding Path=RelayData.AmpSwap.Disable}" />
                </Behaviors:EventTrigger>
            </Behaviors:Interaction.Triggers>
        </ui:AppBarToggleButton>
      </ui:CommandBar>
    </Grid>
  </ui:NavigationView>
</Window>
