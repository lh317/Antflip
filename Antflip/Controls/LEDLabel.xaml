<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019"
                    xmlns:local="clr-namespace:Antflip.Controls"
                    xmlns:primitives="clr-namespace:ModernWpf.Controls.Primitives;assembly=ModernWpf">
     <Style x:Key="DefaultLEDLabelStyle" TargetType="local:LEDLabel">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource RadioButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource RadioButtonForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource RadioButtonBorderBrush}" />
        <Setter Property="Padding" Value="4,6,0,0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="MinWidth" Value="60" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LEDLabel">
                    <Border
                        x:Name="RootGrid"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding primitives:ControlHelper.CornerRadius}"
                        SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="OuterEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="CheckOuterEllipse"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid
                                VerticalAlignment="Top"
                                Height="32">
                                <Ellipse
                                    x:Name="OuterEllipse"
                                    Width="20"
                                    Height="20"
                                    UseLayoutRounding="False"
                                    Stroke="{DynamicResource RadioButtonOuterEllipseStroke}"
                                    Fill="{DynamicResource RadioButtonOuterEllipseFill}"
                                    StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}" />
                                <Ellipse
                                    x:Name="CheckOuterEllipse"
                                    Width="20"
                                    Height="20"
                                    UseLayoutRounding="False"
                                    Stroke="{DynamicResource LEDLabelOuterEllipseCheckedStroke}"
                                    Fill="{DynamicResource LEDLabelOuterEllipseCheckedFill}"
                                    Opacity="0"
                                    StrokeThickness="{DynamicResource RadioButtonBorderThemeThickness}" />
                            </Grid>
                            <ui:ContentPresenterEx
                                x:Name="ContentPresenter"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Grid.Column="1"
                                TextWrapping="Wrap"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsConnected" Value="False">
                            <Setter TargetName="OuterEllipse" Property="Stroke" Value="{DynamicResource LEDLabelOuterEllipseStrokeDisconnected}" />
                            <Setter TargetName="OuterEllipse" Property="Fill" Value="{DynamicResource LEDLabelOuterEllipseFillDisconnected}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Stroke" Value="{DynamicResource LEDLabelOuterEllipseStrokeDisconnected}" />
                            <Setter TargetName="CheckOuterEllipse" Property="Fill" Value="{DynamicResource LEDLabelOuterEllipseFillDisconnected}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:LEDLabel" BasedOn="{StaticResource DefaultLEDLabelStyle}" />
</ResourceDictionary>
